{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","numberOfPages","prevDisabled","nextDisabled","className","classNames","disabled","href","onClick","map","page","active","items","App","useState","setCurrentPage","setPerPage","length","startOfPage","endOfPage","partOfItems","slice","id","value","onChange","event","pageSize","currentTarget","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"sOAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCKIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAgBd,EAAW,EAAGW,GAE9BI,EAA+B,IAAhBN,EACfO,EAAeP,IAAgBE,EAErC,OACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAAUJ,IAHhB,SAME,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAAS,WACFN,GACHL,EAAaD,EAAc,IAPjC,oBAcDK,EAAcQ,KAAI,SAACC,GAAD,OACjB,oBAEEN,UAAWC,IACT,YACA,CAAEM,OAAQD,IAASd,IAJvB,SAOE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAaa,IAJ9B,SAMGA,KAZEA,MAgBT,oBACEN,UAAWC,IACT,YACA,CAAEC,SAAUH,IAHhB,SAME,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QAAS,WACFL,GACHN,EAAaD,EAAc,IAPjC,wBChEFgB,EAAQzB,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEPsB,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOlB,EAAP,KAAoBmB,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOnB,EAAP,KAAgBqB,EAAhB,KAEMtB,EAAQkB,EAAMK,OACdC,EAActB,EAAcD,EAAUA,EACtCwB,EAAYvB,EAAcD,EAAUD,EACtCA,EACAE,EAAcD,EACZyB,EAAcR,EAAMS,MAAMH,EAAaC,GAO7C,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCsB,EAAc,EAD/C,cACsDC,EADtD,eACsEzB,EADtE,OAIA,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRkB,GAAG,kBACHC,MAAO5B,EACPS,UAAU,eACVoB,SAAU,SAACC,GAAD,OApBKC,GAoBuBD,EAAME,cAAcJ,MAnBlEP,EAAWU,QACXX,EAAe,GAFO,IAACW,GAejB,UAOE,wBAAQH,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAMF,cAAC,EAAD,CACEV,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAAckB,IAEhB,6BACGK,EAAYX,KAAI,SAAAoB,GAAI,OACnB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC5DnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d1f1d87b.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport './Pagination.scss';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const numberOfPages = getNumbers(1, totalPages);\n\n  const prevDisabled = currentPage === 1;\n  const nextDisabled = currentPage === totalPages;\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: prevDisabled },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={prevDisabled}\n          onClick={() => {\n            if (!prevDisabled) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n      {numberOfPages.map((page) => (\n        <li\n          key={page}\n          className={classNames(\n            'page-item',\n            { active: page === currentPage },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: nextDisabled },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={nextDisabled}\n          onClick={() => {\n            if (!nextDisabled) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const total = items.length;\n  const startOfPage = currentPage * perPage - perPage;\n  const endOfPage = currentPage * perPage > total\n    ? total\n    : currentPage * perPage;\n  const partOfItems = items.slice(startOfPage, endOfPage);\n\n  const onChangePerPage = (pageSize: number) => {\n    setPerPage(pageSize);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startOfPage + 1} - ${endOfPage} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            value={perPage}\n            className=\"form-control\"\n            onChange={(event) => onChangePerPage(+event.currentTarget.value)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n      <ul>\n        {partOfItems.map(item => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}