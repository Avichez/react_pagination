{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","totalPages","Math","ceil","numberOfPages","prevDisabled","nextDisabled","setSearchParams","nextPage","className","classNames","disabled","map","page","active","items","App","useState","setCurrentPage","setPerPage","navigate","useNavigate","useSearchParams","searchParams","get","perPageSize","length","startOfPage","endOfPage","partOfItems","slice","useEffect","id","value","onChange","event","pageSize","currentTarget","htmlFor","item","ReactDOM","render","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.4ff76580.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport './Pagination.scss';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  // onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  // onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const numberOfPages = getNumbers(1, totalPages);\n\n  const prevDisabled = currentPage === 1;\n  const nextDisabled = currentPage === totalPages;\n\n  const setSearchParams = (nextPage: number) => {\n    if (nextPage < 1) {\n      return `?page=${1}&perPageSize=${perPage}`;\n    }\n\n    if (nextPage > totalPages) {\n      return `?page=${totalPages}&perPageSize=${perPage}`;\n    }\n\n    return `?page=${nextPage}&perPageSize=${perPage}`;\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: prevDisabled },\n        )}\n      >\n        <Link\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          to={setSearchParams(currentPage - 1)}\n          aria-disabled={prevDisabled}\n        >\n          «\n        </Link>\n      </li>\n      {numberOfPages.map((page) => (\n        <li\n          key={page}\n          className={classNames(\n            'page-item',\n            { active: page === currentPage },\n          )}\n        >\n          <Link\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            to={setSearchParams(page)}\n          >\n            {page}\n          </Link>\n        </li>\n      ))}\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: nextDisabled },\n        )}\n      >\n        <Link\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          to={setSearchParams(currentPage + 1)}\n          aria-disabled={nextDisabled}\n        >\n          »\n        </Link>\n      </li>\n    </ul>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n\n  const page = searchParams.get('page') || 1;\n  const perPageSize = searchParams.get('perPageSize') || 5;\n\n  const total = items.length;\n  const startOfPage = currentPage * perPage - perPage;\n  const endOfPage = currentPage * perPage > total\n    ? total\n    : currentPage * perPage;\n  const partOfItems = items.slice(startOfPage, endOfPage);\n\n  useEffect(() => {\n    setPerPage(+perPageSize);\n    setCurrentPage(+page);\n  }, [perPageSize, page]);\n\n  const onChangePerPage = (pageSize: number) => {\n    navigate(`?page=${1}&perPageSize=${pageSize}`);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startOfPage + 1} - ${endOfPage} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            value={perPage}\n            className=\"form-control\"\n            onChange={(event) => onChangePerPage(+event.currentTarget.value)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n      />\n\n      <ul>\n        {partOfItems.map(item => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Routes>\n      <Route path=\"/*\" element={<App />} />\n    </Routes>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}